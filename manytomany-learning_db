-- MANY-TO-MANY DB

-- DataBase of Courses - Account: use of a junction table called Member

CREATE DATABASE Learning DEFAULT CHARACTER SET utf8;

-- USE Learning;

CREATE TABLE Account (
  account_id INTEGER NOT NULL AUTO_INCREMENT,
  email VARCHAR(128) UNIQUE,
  name VARCHAR(128),
  
  PRIMARY KEY (account_id)
) ENGINE = InnoDB CHARACTER SET = utf8;
 
CREATE TABLE Course (
  course_id INTEGER NOT NULL AUTO_INCREMENT,
  title VARCHAR(128) UNIQUE,
   
  PRIMARY KEY (course_id)
) ENGINE = InnoDB CHARACTER SET = utf8;
 
CREATE TABLE Role (
  role_id INTEGER NOT NULL AUTO_INCREMENT,
  role CHAR(20),
  
  PRIMARY KEY (role_id)
) ENGINE = InnoDB CHARACTER SET = utf8;

CREATE TABLE Member (
  account_id INTEGER, -- many-to-many
  course_id INTEGER, -- many-to-many
  role_id INTEGER, -- one-to-many
  
  CONSTRAINT FOREIGN KEY (account_id) REFERENCES Account (account_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FOREIGN KEY (course_id) REFERENCES Course (course_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FOREIGN KEY (role_id) REFERENCES Role (role_id) ON DELETE RESTRICT ON UPDATE CASCADE,  
 
  PRIMARY KEY (account_id, course_id)
) ENGINE = InnoDB CHARACTER SET = utf8;

INSERT INTO Account (name, email) VALUES ('Jane','jane@tsugi.org');
INSERT INTO Account (`name`, email) VALUES ('Ed', 'ed@tsugi.org');
INSERT INTO `Account` (`name`, email) VALUES ('Sue', 'sue@tsugi.org');

INSERT INTO Course (title) VALUES ('Python');
INSERT INTO Course (title) VALUES ('SQL');
INSERT INTO Course (title) VALUES ('PHP');

INSERT INTO Role (role) VALUES ('Professor');
INSERT INTO Role (role) VALUES ('Monitor');
INSERT INTO Role (role) VALUES ('Student');

INSERT INTO Member (account_id, course_id, role_id) VALUES (1, 1, 1);
INSERT INTO Member (account_id, course_id, role_id) VALUES (2, 1, 2);
INSERT INTO Member (account_id, course_id, role_id) VALUES (3, 1, 3);

INSERT INTO Member (account_id, course_id, role_id) VALUES (1, 2, 3);
INSERT INTO Member (account_id, course_id, role_id) VALUES (2, 2, 1);

INSERT INTO Member (account_id, course_id, role_id) VALUES (2, 3, 1);
INSERT INTO Member (account_id, course_id, role_id) VALUES (3, 3, 3);

SELECT Course.title, Role.role, Account.name FROM Account JOIN Member JOIN Role JOIN Course ON Member.course_id = Course.course_id AND Member.role_id = Role.role_id AND Member.account_id = Account.account_id ORDER BY Course.title, Role.role_id ASC, Account.name;

 
 
